{{- if .Values.grafana.ingress.enabled }}
{{- $networkingApiIsStable := eq (include "networking.apiVersion.isStable" .) "true" -}}
{{- $networkingApiSupportsIngressClassName := eq (include "networking.apiVersion.supportIngressClassName" .) "true" -}}
apiVersion: {{ template "networking.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "brigade-metrics.grafana.fullname" . }}
  labels:
    {{- include "brigade-metrics.labels" . | nindent 4 }}
    {{- include "brigade-metrics.grafana.labels" . | nindent 4 }}
  {{- with .Values.grafana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and (.Values.grafana.ingress.ingressClassName) ($networkingApiSupportsIngressClassName) }}
  ingressClassName: {{ .Values.grafana.ingress.ingressClassName }}
  {{- end }}
  rules:
  - host: {{ .Values.grafana.host }}
    http:
      paths:
      {{- if $networkingApiIsStable }}
      - pathType: ImplementationSpecific
        path: /
        backend:
          service:
            name: {{ include "brigade-metrics.grafana.fullname" . }}
            port:
              {{- if .Values.grafana.tls.enabled }}
              number: 443
              {{- else }}
              number: 80
              {{- end }}
      {{- else }}
      - backend:
          serviceName: {{ include "brigade-metrics.grafana.fullname" . }}
          {{- if .Values.grafana.tls.enabled }}
          servicePort: 443
          {{- else }}
          servicePort: 80
          {{- end }}
      {{- end}}
  {{- if .Values.grafana.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.grafana.host }}
    secretName: {{ include "brigade-metrics.grafana.fullname" . }}-ingress-cert
  {{- end }}
{{- end }}
